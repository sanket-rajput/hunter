// PaymentStrategy.java (Interface for Strategy)
package exam1;

interface PaymentStrategy {
    void pay(int amount);
}

// CreditCardPayment.java (Concrete Strategy for Credit Card Payment)
class CreditCardPayment implements PaymentStrategy {
    private String cardNumber;
    private String name;
    private String cvv;

    public CreditCardPayment(String cardNumber, String name, String cvv) {
        this.cardNumber = cardNumber;
        this.name = name;
        this.cvv = cvv;
    }

    @Override
    public void pay(int amount) {
        System.out.println("Paid " + amount + " using Credit Card.");
        System.out.println("Card Holder: " + name);
        System.out.println("Card Number: " + cardNumber.substring(0, 4) + "************");
    }
}

// PayPalPayment.java (Concrete Strategy for PayPal Payment)
class PayPalPayment implements PaymentStrategy {
    private String email;
    private String password;

    public PayPalPayment(String email, String password) {
        this.email = email;
        this.password = password;
    }

    @Override
    public void pay(int amount) {
        System.out.println("Paid " + amount + " using PayPal.");
        System.out.println("PayPal Email: " + email);
    }
}

// BitcoinPayment.java (Concrete Strategy for Bitcoin Payment)
class BitcoinPayment implements PaymentStrategy {
    private String walletAddress;

    public BitcoinPayment(String walletAddress) {
        this.walletAddress = walletAddress;
    }

    @Override
    public void pay(int amount) {
        System.out.println("Paid " + amount + " using Bitcoin.");
        System.out.println("Bitcoin Wallet: " + walletAddress);
    }
}

// Item.java (Represents a shopping cart item)
class Item {
    private String name;
    private int price;

    public Item(String name, int price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public int getPrice() {
        return price;
    }
}

// ShoppingCart.java (Context Class for Strategy Pattern) create a different class from here
package exam1;

import java.util.ArrayList;
import java.util.List;

class ShoppingCart {
    private List<Item> items;

    public ShoppingCart() {
        items = new ArrayList<>();
    }

    public void addItem(Item item) {
        items.add(item);
    }

    public void removeItem(Item item) {
        items.remove(item);
    }

    public int calculateTotal() {
        return items.stream().mapToInt(Item::getPrice).sum();
    }

    public void checkout(PaymentStrategy paymentMethod) {
        int totalAmount = calculateTotal();
        if (totalAmount > 0) {
            paymentMethod.pay(totalAmount);
        } else {
            System.out.println("Cart is empty. Add items before checkout.");
        }
    }
}

// Main.java (Driver Program)
public class StrategyPatternMain {
    public static void main(String[] args) {
        // Create Shopping Cart
        ShoppingCart cart = new ShoppingCart();

        // Add items to cart
        cart.addItem(new Item("Laptop", 50000));
        cart.addItem(new Item("Phone", 20000));

        // Pay using Credit Card
        System.out.println("\n--- Credit Card Payment ---");
        PaymentStrategy creditCard = new CreditCardPayment("1234567812345678", "John Doe", "123");
        cart.checkout(creditCard);

        // Pay using PayPal
        System.out.println("\n--- PayPal Payment ---");
        PaymentStrategy paypal = new PayPalPayment("johndoe@example.com", "securepassword");
        cart.checkout(paypal);

        // Pay using Bitcoin
        System.out.println("\n--- Bitcoin Payment ---");
        PaymentStrategy bitcoin = new BitcoinPayment("1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa");
        cart.checkout(bitcoin);
    }
}




//OP
//--- Credit Card Payment ---
//Paid 70000 using Credit Card.
//Card Holder: John Doe
//Card Number: 1234************
//
//--- PayPal Payment ---
//Paid 70000 using PayPal.
//PayPal Email: johndoe@example.com
//
//--- Bitcoin Payment ---
//Paid 70000 using Bitcoin.
//Bitcoin Wallet: 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa



